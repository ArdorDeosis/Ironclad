name: Manual Versioning, Test, and Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Which version part to bump: major, minor, or patch'
        required: true
        default: 'patch'

jobs:
  version_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Get current version
        id: get_version
        run: echo "Current version is $(git describe --tags --abbrev=0)"

      - name: Bump version
        id: bump_version
        run: |
          version=$(git describe --tags --abbrev=0)
          version_type=${{ github.event.inputs.version_type }}
          if [ "$version_type" == "major" ]; then
            new_version=$(echo $version | awk -F. '{print $1+1 ".0.0"}')
          elif [ "$version_type" == "minor" ]; then
            new_version=$(echo $version | awk -F. '{print $1 "." $2+1 ".0"}')
          else
            new_version=$(echo $version | awk -F. '{print $1 "." $2 "." $3+1}')
          fi
          echo "New version is $new_version"
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Run Unit Tests
        run: dotnet test --configuration Release

      - name: Tag new version
        run: git tag ${{ env.new_version }}

      - name: Build and Pack
        run: dotnet pack --configuration Release /p:PackageVersion=${{ env.new_version }}

      - name: Push to NuGet
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: dotnet nuget push **/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json

      - name: Push Tag
        run: git push origin ${{ env.new_version }}
